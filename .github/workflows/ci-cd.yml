name: CI/CD Pipeline üöÄ

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: ci-cd-node-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repo
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Install dependencies cleanly
      - name: üì¶ Install dependencies
        run: npm ci

      # Run tests (optional)
      - name: ‚úÖ Run tests
        run: npm test || echo "No tests found, skipping"

      # Log in to Docker Hub securely
      - name: üîê Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract version from package.json and store in GITHUB_ENV
      - name: üè∑Ô∏è Extract version tag
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "App version is: $VERSION"

      # Build Docker image using the version + latest tag
      - name: üèóÔ∏è Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
                       -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest .

      # Push Docker image with both tags
      - name: üì§ Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      # (Optional) Notify or print deployment message
      - name: üöÄ Deployment Info
        run: |
          echo "‚úÖ Docker image pushed successfully!"
          echo "üëâ Image tags:"
          echo "- ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}"
          echo "- ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
